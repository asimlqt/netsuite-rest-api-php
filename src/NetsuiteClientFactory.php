<?php

namespace NetsuiteRestApi;

use Http\Discovery\Psr17FactoryDiscovery;
use Http\Discovery\Psr18Client;
use NetsuiteRestApi\Client\HttpClient;
use NetsuiteRestApi\Oauth\OauthService;
use NetsuiteRestApi\Pagination\PageFactory;

class NetsuiteClientFactory
{
    public function __construct(
        public readonly string $companyUrl,
        public readonly string $accountId,
        public readonly string $consumerKey,
        public readonly string $consumerSecret,
        public readonly string $tokenId,
        public readonly string $tokenSecret,
    ) {}

    public function create(): NetsuiteClient
    {
        $oauthService = new OauthService(
            $this->companyUrl,
            $this->accountId,
            $this->consumerKey,
            $this->consumerSecret,
            $this->tokenId,
            $this->tokenSecret
        );

        $client = new Psr18Client();
        $requestFactory = Psr17FactoryDiscovery::findRequestFactory();

        $httpClient = new HttpClient(
            $this->companyUrl,
            $client,
            $requestFactory,
            $oauthService
        );

        $pageFactory = new PageFactory($httpClient);

        return new NetsuiteClient(
            new Api\Query($httpClient, $pageFactory),
            new Api\Account($httpClient, $pageFactory),
            new Api\AccountingPeriod($httpClient, $pageFactory),
            new Api\AdvIntercompanyJournalEntry($httpClient, $pageFactory),
            new Api\AssemblyBuild($httpClient, $pageFactory),
            new Api\AssemblyItem($httpClient, $pageFactory),
            new Api\AssemblyUnbuild($httpClient, $pageFactory),
            new Api\BillingAccount($httpClient, $pageFactory),
            new Api\BillingRevenueEvent($httpClient, $pageFactory),
            new Api\BillingSchedule($httpClient, $pageFactory),
            new Api\Bin($httpClient, $pageFactory),
            new Api\BinTransfer($httpClient, $pageFactory),
            new Api\BlanketPurchaseOrder($httpClient, $pageFactory),
            new Api\Bom($httpClient, $pageFactory),
            new Api\BomRevision($httpClient, $pageFactory),
            new Api\CalendarEvent($httpClient, $pageFactory),
            new Api\Campaign($httpClient, $pageFactory),
            new Api\CampaignResponse($httpClient, $pageFactory),
            new Api\CashRefund($httpClient, $pageFactory),
            new Api\CashSale($httpClient, $pageFactory),
            new Api\Charge($httpClient, $pageFactory),
            new Api\Check($httpClient, $pageFactory),
            new Api\Classification($httpClient, $pageFactory),
            new Api\CommerceCategory($httpClient, $pageFactory),
            new Api\Competitor($httpClient, $pageFactory),
            new Api\ConsolidatedExchangeRate($httpClient, $pageFactory),
            new Api\Contact($httpClient, $pageFactory),
            new Api\ContactCategory($httpClient, $pageFactory),
            new Api\ContactRole($httpClient, $pageFactory),
            new Api\CostCategory($httpClient, $pageFactory),
            new Api\CouponCode($httpClient, $pageFactory),
            new Api\CreditCardCharge($httpClient, $pageFactory),
            new Api\CreditCardRefund($httpClient, $pageFactory),
            new Api\CreditMemo($httpClient, $pageFactory),
            new Api\Currency($httpClient, $pageFactory),
            new Api\Customer($httpClient, $pageFactory),
            new Api\CustomerCategory($httpClient, $pageFactory),
            new Api\CustomerDeposit($httpClient, $pageFactory),
            new Api\CustomerMessage($httpClient, $pageFactory),
            new Api\CustomerPayment($httpClient, $pageFactory),
            new Api\CustomerRefund($httpClient, $pageFactory),
            new Api\CustomerStatus($httpClient, $pageFactory),
            new Api\CustomerSubsidiaryRelationship($httpClient, $pageFactory),
            new Api\Department($httpClient, $pageFactory),
            new Api\Deposit($httpClient, $pageFactory),
            new Api\DepositApplication($httpClient, $pageFactory),
            new Api\DescriptionItem($httpClient, $pageFactory),
            new Api\DiscountItem($httpClient, $pageFactory),
            new Api\DownloadItem($httpClient, $pageFactory),
            new Api\EmailTemplate($httpClient, $pageFactory),
            new Api\Employee($httpClient, $pageFactory),
            new Api\Estimate($httpClient, $pageFactory),
            new Api\ExpenseCategory($httpClient, $pageFactory),
            new Api\ExpenseReport($httpClient, $pageFactory),
            new Api\FairValuePrice($httpClient, $pageFactory),
            new Api\FulfillmentRequest($httpClient, $pageFactory),
            new Api\GiftCertificateItem($httpClient, $pageFactory),
            new Api\InboundShipment($httpClient, $pageFactory),
            new Api\IntercompanyJournalEntry($httpClient, $pageFactory),
            new Api\IntercompanyTransferOrder($httpClient, $pageFactory),
            new Api\InventoryAdjustment($httpClient, $pageFactory),
            new Api\InventoryCostRevaluation($httpClient, $pageFactory),
            new Api\InventoryCount($httpClient, $pageFactory),
            new Api\InventoryItem($httpClient, $pageFactory),
            new Api\InventoryNumber($httpClient, $pageFactory),
            new Api\InventoryTransfer($httpClient, $pageFactory),
            new Api\Invoice($httpClient, $pageFactory),
            new Api\Issue($httpClient, $pageFactory),
            new Api\ItemFulfillment($httpClient, $pageFactory),
            new Api\ItemGroup($httpClient, $pageFactory),
            new Api\ItemReceipt($httpClient, $pageFactory),
            new Api\ItemRevision($httpClient, $pageFactory),
            new Api\Job($httpClient, $pageFactory),
            new Api\JobStatus($httpClient, $pageFactory),
            new Api\JobType($httpClient, $pageFactory),
            new Api\JournalEntry($httpClient, $pageFactory),
            new Api\KitItem($httpClient, $pageFactory),
            new Api\Location($httpClient, $pageFactory),
            new Api\ManufacturingCostTemplate($httpClient, $pageFactory),
            new Api\ManufacturingOperationTask($httpClient, $pageFactory),
            new Api\ManufacturingRouting($httpClient, $pageFactory),
            new Api\MarkupItem($httpClient, $pageFactory),
            new Api\Message($httpClient, $pageFactory),
            new Api\Nexus($httpClient, $pageFactory),
            new Api\NonInventoryPurchaseItem($httpClient, $pageFactory),
            new Api\NonInventoryResaleItem($httpClient, $pageFactory),
            new Api\NonInventorySaleItem($httpClient, $pageFactory),
            new Api\NoteType($httpClient, $pageFactory),
            new Api\Opportunity($httpClient, $pageFactory),
            new Api\OtherChargePurchaseItem($httpClient, $pageFactory),
            new Api\OtherChargeResaleItem($httpClient, $pageFactory),
            new Api\OtherChargeSaleItem($httpClient, $pageFactory),
            new Api\OtherName($httpClient, $pageFactory),
            new Api\OtherNameCategory($httpClient, $pageFactory),
            new Api\Partner($httpClient, $pageFactory),
            new Api\Paycheck($httpClient, $pageFactory),
            new Api\PaymentItem($httpClient, $pageFactory),
            new Api\PaymentMethod($httpClient, $pageFactory),
            new Api\PhoneCall($httpClient, $pageFactory),
            new Api\PriceBook($httpClient, $pageFactory),
            new Api\PriceLevel($httpClient, $pageFactory),
            new Api\PricePlan($httpClient, $pageFactory),
            new Api\PricingGroup($httpClient, $pageFactory),
            new Api\ProjectTask($httpClient, $pageFactory),
            new Api\PromotionCode($httpClient, $pageFactory),
            new Api\PurchaseContract($httpClient, $pageFactory),
            new Api\PurchaseOrder($httpClient, $pageFactory),
            new Api\PurchaseRequisition($httpClient, $pageFactory),
            new Api\ReturnAuthorization($httpClient, $pageFactory),
            new Api\RevRecSchedule($httpClient, $pageFactory),
            new Api\RevRecTemplate($httpClient, $pageFactory),
            new Api\SalesOrder($httpClient, $pageFactory),
            new Api\SalesRole($httpClient, $pageFactory),
            new Api\SalesTaxItem($httpClient, $pageFactory),
            new Api\ServicePurchaseItem($httpClient, $pageFactory),
            new Api\ServiceResaleItem($httpClient, $pageFactory),
            new Api\ServiceSaleItem($httpClient, $pageFactory),
            new Api\ShipItem($httpClient, $pageFactory),
            new Api\StatisticalJournalEntry($httpClient, $pageFactory),
            new Api\Subscription($httpClient, $pageFactory),
            new Api\SubscriptionChangeOrder($httpClient, $pageFactory),
            new Api\SubscriptionLine($httpClient, $pageFactory),
            new Api\SubscriptionPlan($httpClient, $pageFactory),
            new Api\SubscriptionTerm($httpClient, $pageFactory),
            new Api\Subsidiary($httpClient, $pageFactory),
            new Api\SubtotalItem($httpClient, $pageFactory),
            new Api\SupportCase($httpClient, $pageFactory),
            new Api\Task($httpClient, $pageFactory),
            new Api\TaxType($httpClient, $pageFactory),
            new Api\Term($httpClient, $pageFactory),
            new Api\TimeBill($httpClient, $pageFactory),
            new Api\TimeSheet($httpClient, $pageFactory),
            new Api\Topic($httpClient, $pageFactory),
            new Api\TransferOrder($httpClient, $pageFactory),
            new Api\UnitsType($httpClient, $pageFactory),
            new Api\Usage($httpClient, $pageFactory),
            new Api\Vendor($httpClient, $pageFactory),
            new Api\VendorBill($httpClient, $pageFactory),
            new Api\VendorCategory($httpClient, $pageFactory),
            new Api\VendorCredit($httpClient, $pageFactory),
            new Api\VendorPayment($httpClient, $pageFactory),
            new Api\VendorPrepayment($httpClient, $pageFactory),
            new Api\VendorPrepaymentApplication($httpClient, $pageFactory),
            new Api\VendorReturnAuthorization($httpClient, $pageFactory),
            new Api\VendorSubsidiaryRelationship($httpClient, $pageFactory),
            new Api\WebSite($httpClient, $pageFactory),
            new Api\WorkOrder($httpClient, $pageFactory),
            new Api\WorkOrderClose($httpClient, $pageFactory),
            new Api\WorkOrderCompletion($httpClient, $pageFactory),
            new Api\WorkOrderIssue($httpClient, $pageFactory)
        );
    }
}